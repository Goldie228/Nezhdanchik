<div class="min-h-screen bg-base-200">
  <div class="container mx-auto px-4 py-4 md:py-8">
    <!-- Хлебные крошки -->
    <div class="text-sm breadcrumbs mb-4 md:mb-6">
      <ul>
        <li><%= link_to "Меню", menu_path, class: "text-primary hover:text-primary-focus" %></li>
        <% if @dish.category %>
          <li><%= link_to @dish.category.name, category_dishes_path(@category.slug), class: "text-primary hover:text-primary-focus" %></li>
        <% end %>
        <li><span class="text-base-content/60"><%= @dish.title %></span></li>
      </ul>
    </div>

    <div class="grid grid-cols-1 xl:grid-cols-3 gap-6 md:gap-8">
      <!-- Левая колонка: изображения и основная информация -->
      <div class="xl:col-span-2">
        <!-- Карусель изображений блюда -->
        <div class="card bg-base-100 shadow-xl md:shadow-2xl mb-4 md:mb-6">
          <div class="card-body p-0">
            <% if @dish.photos.attached? %>
              <% if @dish.photos.length > 1 %>
                <div class="carousel w-full rounded-2xl" id="dish-carousel">
                  <% @dish.photos.each_with_index do |photo, index| %>
                    <div id="slide<%= index %>" class="carousel-item relative w-full group">
                      <div class="rounded-2xl overflow-hidden">
                        <%= image_tag url_for(photo.variant(resize_to_limit: [1000, 800])), 
                              class: "w-full h-48 sm:h-64 md:h-80 lg:h-96 object-cover cursor-zoom-in transition-transform duration-300 group-hover:scale-105",
                              alt: "#{@dish.title} - фото #{index + 1}",
                              onclick: "openImageModal('#{url_for(photo)}')" %>
                      </div>
                      
                      <!-- Навигация -->
                      <div class="absolute inset-0 flex items-center justify-between p-2 md:p-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                        <a href="#slide<%= index - 1 < 0 ? @dish.photos.length - 1 : index - 1 %>" 
                           class="btn btn-circle btn-sm md:btn-md btn-ghost bg-base-100/80 hover:bg-base-100 border-0 shadow-lg">
                          ❮
                        </a> 
                        <a href="#slide<%= (index + 1) % @dish.photos.length %>" 
                           class="btn btn-circle btn-sm md:btn-md btn-ghost bg-base-100/80 hover:bg-base-100 border-0 shadow-lg">
                          ❯
                        </a>
                      </div>

                      <!-- Индикаторы -->
                      <div class="absolute bottom-2 md:bottom-4 left-1/2 transform -translate-x-1/2">
                        <div class="flex gap-1 md:gap-2 bg-base-100/80 rounded-full px-2 md:px-3 py-1 md:py-2 shadow-lg">
                          <% @dish.photos.each_with_index do |_, i| %>
                            <a href="#slide<%= i %>" 
                               class="block w-2 h-2 md:w-3 md:h-3 rounded-full transition-all duration-300 <%= i == index ? 'bg-primary md:w-6' : 'bg-base-300' %>"></a>
                          <% end %>
                        </div>
                      </div>

                      <!-- Номер фото -->
                      <div class="absolute top-2 md:top-4 right-2 md:right-4 bg-base-100/90 rounded-full px-2 md:px-3 py-1 text-xs md:text-sm font-medium shadow-lg">
                        <%= index + 1 %> / <%= @dish.photos.length %>
                      </div>
                    </div>
                  <% end %>
                </div>
              <% else %>
                <figure class="w-full h-48 sm:h-64 md:h-80 lg:h-96 rounded-2xl overflow-hidden group">
                  <%= image_tag url_for(@dish.photos.first.variant(resize_to_limit: [1000, 800])), 
                        class: "w-full h-full object-cover cursor-zoom-in transition-transform duration-300 group-hover:scale-105",
                        alt: @dish.title,
                        onclick: "openImageModal('#{url_for(@dish.photos.first)}')" %>
                </figure>
              <% end %>
            <% else %>
              <figure class="w-full h-48 sm:h-64 md:h-80 lg:h-96 flex items-center justify-center bg-base-200 rounded-2xl border border-base">
                <svg xmlns="http://www.w3.org/2000/svg"
                     class="w-12 h-12 text-base"
                     fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
                  <path stroke-linecap="round" stroke-linejoin="round" 
                        d="M3 7.5A2.5 2.5 0 015.5 5h2.086a1 1 0 00.707-.293l1.414-1.414A1 1 0 0110.414 3h3.172a1 1 0 01.707.293l1.414 1.414a1 1 0 00.707.293H18.5A2.5 2.5 0 0121 7.5v9a2.5 2.5 0 01-2.5 2.5h-13A2.5 2.5 0 013 16.5v-9z" />
                  <circle cx="12" cy="12" r="3.5" />
                </svg>
              </figure>
            <% end %>
          </div>
        </div>

        <!-- Информация о блюде -->
        <div class="card bg-base-100 shadow-xl mb-4 md:mb-6">
          <div class="card-body p-4 md:p-6">
            <div class="flex flex-col gap-4">
              <div class="flex flex-col gap-2">
                <h1 class="card-title text-2xl md:text-3xl lg:text-4xl font-bold text-primary">
                  <%= @dish.title %>
                </h1>
                
                <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2">
                  <div class="text-xl md:text-2xl lg:text-3xl font-bold text-primary">
                  </div>
                  <div class="flex gap-2">
                    <div class="badge badge-lg badge-outline">
                      <%= @dish.weight %> г
                    </div>
                    <% if @dish.cooking_time_minutes %>
                      <div class="inline-flex items-center gap-2 px-3 py-2 rounded-xl bg-accent text-accent-content shadow-sm badge badge-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm.75-11.5a.75.75 0 00-1.5 0V10a.75.75 0 00.3.6l2.5 1.9a.75.75 0 10.8-1.2L10.75 9.8V6.5z" clip-rule="evenodd" />
                        </svg>
                        <span class="text-sm font-medium hidden sm:inline">Время готовки:</span>
                        <span class="text-sm font-semibold"><%= pretty_cooking_time(@dish.cooking_time_minutes) %></span>
                      </div>
                    <% end %>
                  </div>
                </div>
              </div>
              
              <p class="text-base-content/70 text-base md:text-lg leading-relaxed">
                <%= @dish.description %>
              </p>

              <!-- Питательная ценность блюда -->
              <div class="bg-base-200 rounded-2xl p-4 md:p-6">
                <h3 class="text-lg md:text-xl font-bold mb-3 md:mb-4 flex items-center gap-2">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-primary shrink-0" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M9.75838 1.09929C9.85156 1.13153 9.9852 1.17902 10.1535 1.24207C10.49 1.36812 10.9661 1.55678 11.5355 1.81078C12.6715 2.31752 14.193 3.09073 15.7215 4.15505C18.745 6.26052 22 9.65692 22 14.5393C22 16.6738 21.4305 18.7869 20.1046 20.3856C18.7552 22.0126 16.7095 23 14 23C13.9352 23 13.6752 22.9978 13.4169 22.8125C13.0566 22.5541 12.9699 22.1541 13.0085 21.8667C13.0376 21.6502 13.1305 21.5025 13.1576 21.4602C13.1966 21.3993 13.234 21.3556 13.2534 21.3338C13.293 21.2893 13.3281 21.2581 13.3407 21.247C13.3575 21.2322 13.3716 21.2207 13.3801 21.214C13.4065 21.1929 13.4323 21.1745 13.4402 21.1689L13.4413 21.1681L13.5185 21.1136C13.5762 21.0727 13.6587 21.0131 13.7588 20.9348C13.9606 20.7768 14.2297 20.546 14.4969 20.2526C15.0448 19.6509 15.5 18.8819 15.5 18C15.5 16.3681 14.571 14.8515 13.5067 13.669C12.9869 13.0914 12.4644 12.6267 12.0715 12.3065C12.0471 12.2866 12.0233 12.2674 12 12.2487C11.9767 12.2674 11.9529 12.2866 11.9285 12.3065C11.5356 12.6267 11.0131 13.0914 10.4933 13.669C9.42904 14.8515 8.5 16.3681 8.5 18C8.5 18.8887 8.95405 19.6581 9.49825 20.2564C9.76406 20.5486 10.0319 20.7779 10.2327 20.934C10.3323 21.0114 10.4142 21.0699 10.47 21.1087C10.4933 21.125 10.5115 21.1374 10.5281 21.1487L10.5401 21.1569C10.5471 21.1616 10.5635 21.1728 10.5787 21.1837C10.5832 21.187 10.6139 21.2089 10.6476 21.2376C10.6583 21.2467 10.6772 21.2632 10.6995 21.285C10.7154 21.3005 10.7647 21.3492 10.8157 21.4212C10.8424 21.4607 10.901 21.5658 10.9302 21.6326C10.9668 21.7437 10.9991 22.045 10.9733 22.2301C10.89 22.4562 10.6027 22.798 10.4241 22.9056C10.2979 22.9546 10.0834 22.9965 10 23C7.29045 23 5.24478 22.0126 3.89543 20.3856C2.56953 18.7869 2 16.6738 2 14.5393C2 11.9892 2.88357 10.3815 4.05286 9.15507C4.5965 8.58486 5.19715 8.10224 5.73579 7.66945L5.77852 7.63511C6.34602 7.17903 6.84273 6.7759 7.26778 6.31893C8.30821 5.20037 8.54446 4.18717 8.56055 3.49802C8.56885 3.14245 8.51857 2.85417 8.46943 2.66213C8.44495 2.56644 8.42112 2.49608 8.40592 2.45502C8.39834 2.43455 8.39298 2.42158 8.39089 2.41662C8.22725 2.05872 8.28834 1.6367 8.54841 1.34037C8.86981 0.974175 9.32884 0.950674 9.75838 1.09929Z"></path>
                  </svg>
                  Пищевая ценность на 100г
                </h3>
                <div class="stats stats-vertical lg:stats-horizontal shadow w-full">
                  <!-- Белки -->
                  <div class="stat">
                    <div class="stat-title">Белки</div>
                    <div class="stat-value text-primary">
                      <%= number_with_precision(@dish.nutrition&.proteins || 0, precision: 1) %>г
                    </div>
                  </div>

                  <!-- Жиры -->
                  <div class="stat">
                    <div class="stat-title">Жиры</div>
                    <div class="stat-value text-primary">
                      <%= number_with_precision(@dish.nutrition&.fats || 0, precision: 1) %>г
                    </div>
                  </div>

                  <!-- Углеводы -->
                  <div class="stat">
                    <div class="stat-title">Углеводы</div>
                    <div class="stat-value text-primary">
                      <%= number_with_precision(@dish.nutrition&.carbohydrates || 0, precision: 1) %>г
                    </div>
                  </div>

                  <!-- Калории -->
                  <div class="stat">
                    <div class="stat-title">Калории</div>
                    <div class="stat-value text-warning">
                      <%= number_with_precision(calculate_calories(@dish.nutrition), precision: 0) %>ккал
                    </div>
                  </div>
                </div>
              </div>

              <% if @dish.category %>
                <div class="flex items-center gap-3 p-3 md:p-4 bg-base-200 rounded-2xl">
                  <span class="text-base-content/60 font-medium">Категория:</span>
                  <span class="badge badge-primary badge-lg px-3 md:px-4 py-2 md:py-3 text-sm md:text-base">
                    <%= @dish.category.name %>
                  </span>
                </div>
              <% end %>
            </div>
          </div>
        </div>

        <!-- Ингредиенты -->
        <div class="space-y-4 md:space-y-6">
          <!-- Ингредиенты по умолчанию -->
          <% if @default_ingredients.any? %>
            <div class="card bg-base-100 shadow-xl">
              <div class="card-body p-4 md:p-6">
                <div class="flex items-center gap-3 mb-3 md:mb-4">
                  <div class="w-2 md:w-3 h-6 md:h-8 bg-primary rounded-full"></div>
                  <h2 class="card-title text-xl md:text-2xl">Основные ингредиенты</h2>
                  <span class="badge badge-primary badge-md md:badge-lg"><%= ingredients_count_badge(@default_ingredients.size) %></span>
                </div>
                <div class="divider my-1 md:my-2"></div>
                <div class="grid grid-cols-1 gap-3 md:gap-4 md:grid-cols-2">
                  <% @default_ingredients.each do |di| %>
                    <label class="card bg-base-200 shadow-md hover:shadow-lg transition-all duration-300 cursor-pointer group">
                      <div class="flex items-center gap-3 md:gap-4 p-3 md:p-4">
                        <input type="checkbox" 
                               class="checkbox checkbox-primary checkbox-md md:checkbox-lg ingredient-checkbox" 
                               checked 
                               data-ingredient-id="<%= di.ingredient.id %>"
                               data-price="<%= di.ingredient.price || 0 %>"
                               data-weight="<%= di.ingredient.weight || 0 %>"
                               data-proteins="<%= di.ingredient.nutrition&.proteins || 0 %>"
                               data-fats="<%= di.ingredient.nutrition&.fats || 0 %>"
                               data-carbohydrates="<%= di.ingredient.nutrition&.carbohydrates || 0 %>"
                               data-default="true" />
                        
                        <!-- Изображение ингредиента -->
                        <figure class="w-12 h-12 md:w-16 md:h-16 rounded-xl md:rounded-2xl overflow-hidden flex-shrink-0">
                          <% if di.ingredient.photo.attached? %>
                            <%= image_tag url_for(di.ingredient.photo.variant(resize_to_fill: [80, 80])), 
                                          class: "w-full h-full object-cover group-hover:scale-110 transition-transform duration-300",
                                          alt: di.ingredient.name %>
                          <% end %>
                        </figure>

                        <div class="flex-1 min-w-0">
                          <div class="flex flex-col sm:flex-row sm:items-start sm:justify-between gap-1 md:gap-2">
                            <h3 class="font-semibold text-base md:text-lg truncate"><%= di.ingredient.name %></h3>
                            <span class="text-primary font-semibold text-base md:text-lg whitespace-nowrap">
                              +<%= number_to_currency(di.ingredient.price || 0, unit: "BYN", format: "%n %u") %>
                            </span>
                          </div>
                          <div class="flex items-center gap-2 mt-1">
                            <span class="badge badge-ghost badge-xs md:badge-sm">
                              <%= di.ingredient.weight || 0 %> г
                            </span>
                            <% if di.ingredient.allergen? %>
                              <span class="badge badge-warning badge-xs md:badge-sm">Аллерген</span>
                            <% end %>
                          </div>

                          <!-- Питательная ценность ингредиента -->
                          <% if di.ingredient.nutrition && (di.ingredient.nutrition.proteins.present? || di.ingredient.nutrition.fats.present? || di.ingredient.nutrition.carbohydrates.present?) %>
                            <div class="mt-2 flex items-center gap-3 text-xs text-base-content/60">
                              <% if di.ingredient.nutrition.proteins.present? %>
                                <span class="flex items-center gap-1">
                                  <span class="w-2 h-2 bg-primary rounded-full"></span>
                                  Б: <%= number_with_precision(di.ingredient.nutrition.proteins || 0, precision: 1) %>г
                                </span>
                              <% end %>
                              <% if di.ingredient.nutrition.fats.present? %>
                                <span class="flex items-center gap-1">
                                  <span class="w-2 h-2 bg-secondary rounded-full"></span>
                                  Ж: <%= number_with_precision(di.ingredient.nutrition.fats || 0, precision: 1) %>г
                                </span>
                              <% end %>
                              <% if di.ingredient.nutrition.carbohydrates.present? %>
                                <span class="flex items-center gap-1">
                                  <span class="w-2 h-2 bg-accent rounded-full"></span>
                                  У: <%= number_with_precision(di.ingredient.nutrition.carbohydrates || 0, precision: 1) %>г
                                </span>
                              <% end %>
                            </div>
                          <% end %>
                        </div>
                      </div>
                    </label>
                  <% end %>
                </div>
              </div>
            </div>
          <% end %>

          <!-- Дополнительные ингредиенты -->
          <% if @new_ingredients.any? %>
            <div class="card bg-base-100 shadow-xl">
              <div class="card-body p-4 md:p-6">
                <div class="flex items-center gap-3 mb-3 md:mb-4">
                  <div class="w-2 md:w-3 h-6 md:h-8 bg-accent rounded-full"></div>
                  <h2 class="card-title text-xl md:text-2xl">Дополнительные ингредиенты</h2>
                  <span class="badge badge-accent badge-md md:badge-lg">+<%= @new_ingredients.size %></span>
                </div>
                <div class="divider my-1 md:my-2"></div>
                <div class="grid grid-cols-1 gap-3 md:gap-4 md:grid-cols-2">
                  <% @new_ingredients.each do |di| %>
                    <label class="card bg-base-200 shadow-md hover:shadow-lg transition-all duration-300 cursor-pointer group">
                      <div class="flex items-center gap-3 md:gap-4 p-3 md:p-4">
                        <input type="checkbox" 
                               class="checkbox checkbox-accent checkbox-md md:checkbox-lg ingredient-checkbox" 
                               data-ingredient-id="<%= di.ingredient.id %>"
                               data-price="<%= di.ingredient.price || 0 %>"
                               data-weight="<%= di.ingredient.weight || 0 %>"
                               data-proteins="<%= di.ingredient.nutrition&.proteins || 0 %>"
                               data-fats="<%= di.ingredient.nutrition&.fats || 0 %>"
                               data-carbohydrates="<%= di.ingredient.nutrition&.carbohydrates || 0 %>"
                               data-default="false" />
                        
                        <!-- Изображение ингредиента -->
                        <figure class="w-12 h-12 md:w-16 md:h-16 rounded-xl md:rounded-2xl overflow-hidden flex-shrink-0">
                          <% if di.ingredient.photo.attached? %>
                            <%= image_tag url_for(di.ingredient.photo.variant(resize_to_fill: [80, 80])), 
                                          class: "w-full h-full object-cover group-hover:scale-110 transition-transform duration-300",
                                          alt: di.ingredient.name %>
                          <% end %>
                        </figure>

                        <div class="flex-1 min-w-0">
                          <div class="flex flex-col sm:flex-row sm:items-start sm:justify-between gap-1 md:gap-2">
                            <h3 class="font-semibold text-base md:text-lg truncate"><%= di.ingredient.name %></h3>
                            <span class="text-secondary-content font-semibold text-base md:text-lg whitespace-nowrap">
                              +<%= number_to_currency(di.ingredient.price || 0, unit: "BYN", format: "%n %u") %>
                            </span>
                          </div>
                          <div class="flex items-center gap-2 mt-1">
                            <span class="badge badge-ghost badge-xs md:badge-sm">
                              <%= di.ingredient.weight || 0 %> г
                            </span>
                            <% if di.ingredient.allergen? %>
                              <span class="badge badge-warning badge-xs md:badge-sm">Аллерген</span>
                            <% end %>
                          </div>

                          <!-- Питательная ценность ингредиента -->
                          <% if di.ingredient.nutrition && (di.ingredient.nutrition.proteins.present? || di.ingredient.nutrition.fats.present? || di.ingredient.nutrition.carbohydrates.present?) %>
                            <div class="mt-2 flex items-center gap-3 text-xs text-base-content/60">
                              <% if di.ingredient.nutrition.proteins.present? %>
                                <span class="flex items-center gap-1">
                                  <span class="w-2 h-2 bg-primary rounded-full"></span>
                                  Б: <%= number_with_precision(di.ingredient.nutrition.proteins || 0, precision: 1) %>г
                                </span>
                              <% end %>
                              <% if di.ingredient.nutrition.fats.present? %>
                                <span class="flex items-center gap-1">
                                  <span class="w-2 h-2 bg-secondary rounded-full"></span>
                                  Ж: <%= number_with_precision(di.ingredient.nutrition.fats || 0, precision: 1) %>г
                                </span>
                              <% end %>
                              <% if di.ingredient.nutrition.carbohydrates.present? %>
                                <span class="flex items-center gap-1">
                                  <span class="w-2 h-2 bg-accent rounded-full"></span>
                                  У: <%= number_with_precision(di.ingredient.nutrition.carbohydrates || 0, precision: 1) %>г
                                </span>
                              <% end %>
                            </div>
                          <% end %>
                        </div>
                      </div>
                    </label>
                  <% end %>
                </div>
              </div>
            </div>
          <% end %>
        </div>
      </div>

      <!-- Правая колонка: панель заказа и питательная ценность -->
      <div class="xl:col-span-1">
        <div class="sticky top-4 md:top-6 space-y-4 md:space-y-6">
          <!-- Панель заказа -->
          <div class="card bg-gradient-to-br from-primary/10 via-primary/5 to-secondary/10 shadow-xl md:shadow-2xl border border-primary/20">
            <div class="card-body p-4 md:p-6">
              <h2 class="card-title text-xl md:text-2xl text-primary mb-2 flex items-center gap-2">
                <svg class="w-5 h-5 md:w-6 md:h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"></path>
                </svg>
                Ваш заказ
              </h2>
              
              <div class="space-y-3 md:space-y-4 bg-base-100/90 rounded-xl md:rounded-2xl p-4 md:p-6 backdrop-blur-sm border border-base-200">
                <div class="flex justify-between items-center text-base md:text-lg">
                  <span class="text-base-content/70">Базовая цена:</span>
                  <span id="base-price" class="font-semibold" data-base-price="<%= @dish.price || 0 %>">
                    <%= number_to_currency(@dish.price || 0, unit: "BYN", format: "%n %u") %>
                  </span>
                </div>
                <div class="flex justify-between items-center text-base md:text-lg">
                  <span class="text-base-content/70">Дополнительно:</span>
                  <span id="extras-price" class="font-semibold text-secondary-content">
                    <%= number_to_currency(0, unit: "BYN", format: "%n %u") %>
                  </span>
                </div>
                <div class="divider my-1 md:my-2"></div>
                <div class="flex justify-between items-center text-lg md:text-xl font-bold text-primary">
                  <span>Итого к оплате:</span>
                  <span id="total-price" class="text-xl md:text-2xl">
                    <%= number_to_currency(@dish.price || 0, unit: "BYN", format: "%n %u") %>
                  </span>
                </div>
                <div class="flex justify-between items-center text-sm md:text-base text-base-content/70">
                  <span>Общий вес:</span>
                  <span id="total-weight" class="font-medium" data-base-weight="<%= @dish.weight || 0 %>">
                    <%= @dish.weight || 0 %> г
                  </span>
                </div>
              </div>

              <!-- Динамическая питательная ценность -->
              <div class="mt-4 md:mt-6 bg-base-100/90 rounded-xl md:rounded-2xl p-4 md:p-6 backdrop-blur-sm border border-base-200">
                <h3 class="text-lg font-bold mb-3 flex items-center gap-2">
                  Пищевая ценность
                </h3>
                <div class="grid grid-cols-2 gap-3 text-sm" 
                     id="nutrition-block"
                     data-base-proteins="<%= @dish.nutrition&.proteins || 0 %>"
                     data-base-fats="<%= @dish.nutrition&.fats || 0 %>"
                     data-base-carbohydrates="<%= @dish.nutrition&.carbohydrates || 0 %>">
                  <div class="text-base-content/70">Белки</div>
                  <div class="font-medium text-right" id="nutrition-proteins">
                    <%= number_with_precision(@dish.nutrition&.proteins || 0, precision: 1) %> г
                  </div>
                  
                  <div class="text-base-content/70">Жиры</div>
                  <div class="font-medium text-right" id="nutrition-fats">
                    <%= number_with_precision(@dish.nutrition&.fats || 0, precision: 1) %> г
                  </div>
                  
                  <div class="text-base-content/70">Углеводы</div>
                  <div class="font-medium text-right" id="nutrition-carbs">
                    <%= number_with_precision(@dish.nutrition&.carbohydrates || 0, precision: 1) %> г
                  </div>
                  
                  <div class="text-base-content/70">Калории</div>
                  <div class="font-medium text-right" id="nutrition-calories">
                    <%= number_with_precision(calculate_calories(@dish.nutrition), precision: 0) %> ккал
                  </div>
                </div>
              </div>

              <div class="card-actions mt-4 md:mt-6">
                <%= button_to "#", 
                    method: :post,
                    class: "btn btn-primary btn-md md:btn-lg w-full shadow-lg transform transition-all hover:scale-105 active:scale-95 duration-200",
                    id: "order-button",
                    form: { 
                      data: { 
                        turbo: false,
                        ingredient_ids: "",
                        removed_ingredient_ids: ""
                      } 
                    } do %>
                  <svg class="w-5 h-5 md:w-6 md:h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                  </svg>
                  Добавить в корзину
                <% end %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Модальное окно для просмотра изображений -->
<dialog id="image_modal" class="modal">
  <div class="modal-box max-w-7xl w-11/12 h-5/6 max-h-full p-0 bg-transparent shadow-none">
    <form method="dialog" class="absolute right-2 md:right-4 top-2 md:top-4 z-10">
      <button class="btn btn-circle btn-sm md:btn-md btn-ghost bg-base-100/80 hover:bg-base-100 border-0 text-base md:text-lg">
        ✕
      </button>
    </form>
    <div class="w-full h-full flex items-center justify-center">
      <img id="modal_image" class="max-w-full max-h-full object-contain rounded-xl md:rounded-2xl shadow-2xl" src="" />
    </div>
  </div>
  <form method="dialog" class="modal-backdrop bg-black/70">
    <button>close</button>
  </form>
</dialog>

<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('DOM loaded - initializing price and nutrition calculator');
  
  const basePriceElement = document.getElementById('base-price');
  const totalPriceElement = document.getElementById('total-price');
  const totalWeightElement = document.getElementById('total-weight');
  const extrasPriceElement = document.getElementById('extras-price');
  const orderForm = document.querySelector('#order-button').closest('form');
  const nutritionBlock = document.getElementById('nutrition-block');
  
  // Получаем базовые значения из data-атрибутов с проверками на null/undefined
  const basePrice = parseFloat(basePriceElement.dataset.basePrice) || 0;
  const baseWeight = parseInt(totalWeightElement.dataset.baseWeight) || 0;
  
  // Получаем базовые значения питательности с проверками
  let baseProteins = 0;
  let baseFats = 0;
  let baseCarbohydrates = 0;

  if (nutritionBlock) {
    baseProteins = parseFloat(nutritionBlock.dataset.baseProteins) || 0;
    baseFats = parseFloat(nutritionBlock.dataset.baseFats) || 0;
    baseCarbohydrates = parseFloat(nutritionBlock.dataset.baseCarbohydrates) || 0;
  }

  console.log('Base price:', basePrice, 'Base weight:', baseWeight);
  console.log('Base nutrition - Proteins:', baseProteins, 'Fats:', baseFats, 'Carbs:', baseCarbohydrates);

  const ingredientCheckboxes = document.querySelectorAll('.ingredient-checkbox');
  console.log('Found checkboxes:', ingredientCheckboxes.length);

  // Функция для расчета калорий
  const calculateCalories = (proteins, fats, carbohydrates) => {
    // Проверяем, что значения не отрицательные
    proteins = Math.max(0, proteins || 0);
    fats = Math.max(0, fats || 0);
    carbohydrates = Math.max(0, carbohydrates || 0);
    
    return (proteins * 4) + (fats * 9) + (carbohydrates * 4);
  };

  // Функция для обновления питательности
  const updateNutrition = () => {
    if (!nutritionBlock) return;

    let currentProteins = baseProteins;
    let currentFats = baseFats;
    let currentCarbohydrates = baseCarbohydrates;

    ingredientCheckboxes.forEach(checkbox => {
      const proteins = parseFloat(checkbox.dataset.proteins) || 0;
      const fats = parseFloat(checkbox.dataset.fats) || 0;
      const carbohydrates = parseFloat(checkbox.dataset.carbohydrates) || 0;
      const isDefault = checkbox.dataset.default === 'true';

      if (isDefault) {
        if (!checkbox.checked) {
          currentProteins -= proteins;
          currentFats -= fats;
          currentCarbohydrates -= carbohydrates;
        }
      } else {
        if (checkbox.checked) {
          currentProteins += proteins;
          currentFats += fats;
          currentCarbohydrates += carbohydrates;
        }
      }
    });

    // Убеждаемся, что значения не отрицательные
    currentProteins = Math.max(0, currentProteins);
    currentFats = Math.max(0, currentFats);
    currentCarbohydrates = Math.max(0, currentCarbohydrates);

    // Обновляем отображение питательности
    document.getElementById('nutrition-proteins').textContent = currentProteins.toFixed(1) + ' г';
    document.getElementById('nutrition-fats').textContent = currentFats.toFixed(1) + ' г';
    document.getElementById('nutrition-carbs').textContent = currentCarbohydrates.toFixed(1) + ' г';
    
    const calories = calculateCalories(currentProteins, currentFats, currentCarbohydrates);
    document.getElementById('nutrition-calories').textContent = calories.toFixed(0) + ' ккал';

    console.log('Updated nutrition - Proteins:', currentProteins, 'Fats:', currentFats, 'Carbs:', currentCarbohydrates, 'Calories:', calories);
  };

  // Функция для обновления итогов
  const updateTotals = () => {
    console.log('Updating totals...');
    
    let currentTotalPrice = basePrice;
    let currentTotalWeight = baseWeight;
    let extrasPrice = 0;
    const selectedIngredientIds = [];
    const removedIngredientIds = [];

    ingredientCheckboxes.forEach(checkbox => {
      const price = parseFloat(checkbox.dataset.price) || 0;
      const weight = parseInt(checkbox.dataset.weight) || 0;
      const ingredientId = checkbox.dataset.ingredientId;
      const isDefault = checkbox.dataset.default === 'true';

      console.log(`Ingredient: ${ingredientId}, price: ${price}, weight: ${weight}, default: ${isDefault}, checked: ${checkbox.checked}`);

      if (isDefault) {
        if (!checkbox.checked) {
          currentTotalPrice -= price;
          currentTotalWeight -= weight;
          removedIngredientIds.push(ingredientId);
          console.log(`Removed default ingredient: ${ingredientId}, -${price} BYN, -${weight} g`);
        }
      } else {
        if (checkbox.checked) {
          currentTotalPrice += price;
          currentTotalWeight += weight;
          extrasPrice += price;
          selectedIngredientIds.push(ingredientId);
          console.log(`Added extra ingredient: ${ingredientId}, +${price} BYN, +${weight} g`);
        }
      }
    });

    // Убеждаемся, что значения не отрицательные
    currentTotalPrice = Math.max(0, currentTotalPrice);
    currentTotalWeight = Math.max(0, currentTotalWeight);
    extrasPrice = Math.max(0, extrasPrice);

    console.log('Final totals - Price:', currentTotalPrice, 'Weight:', currentTotalWeight, 'Extras:', extrasPrice);

    // Обновляем отображение
    totalPriceElement.textContent = `${currentTotalPrice.toFixed(2)} BYN`;
    totalWeightElement.textContent = `${currentTotalWeight} г`;
    extrasPriceElement.textContent = `${extrasPrice.toFixed(2)} BYN`;

    // Обновляем данные формы
    orderForm.dataset.ingredientIds = selectedIngredientIds.join(',');
    orderForm.dataset.removedIngredientIds = removedIngredientIds.join(',');

    console.log('Selected IDs:', selectedIngredientIds);
    console.log('Removed IDs:', removedIngredientIds);

    // Обновляем питательность
    updateNutrition();
  };

  // Добавляем обработчики событий для всех чекбоксов
  ingredientCheckboxes.forEach(checkbox => {
    checkbox.addEventListener('change', updateTotals);
    console.log('Added event listener for checkbox:', checkbox.dataset.ingredientId);
  });

  // Инициализируем начальные значения
  updateTotals();

  // Автоматическая прокрутка карусели
  let carouselInterval;
  const startCarousel = () => {
    if (document.querySelector('#dish-carousel')) {
      carouselInterval = setInterval(() => {
        const activeSlide = document.querySelector('#dish-carousel .carousel-item:target') || 
                           document.querySelector('#dish-carousel .carousel-item');
        const nextSlide = activeSlide.nextElementSibling || 
                         document.querySelector('#dish-carousel .carousel-item');
        const nextSlideId = nextSlide.id;
        window.location.hash = nextSlideId;
      }, 5000);
    }
  };

  const stopCarousel = () => {
    clearInterval(carouselInterval);
  };

  // Останавливаем автопрокрутку при наведении
  const carousel = document.querySelector('#dish-carousel');
  if (carousel) {
    carousel.addEventListener('mouseenter', stopCarousel);
    carousel.addEventListener('mouseleave', startCarousel);
    startCarousel();
  }

  // Обработчик отправки формы
  orderForm.addEventListener('submit', (e) => {
    const selectedIds = orderForm.dataset.ingredientIds.split(',').filter(id => id);
    const removedIds = orderForm.dataset.removedIngredientIds.split(',').filter(id => id);
    
    // Добавляем скрытые поля в форму
    if (selectedIds.length > 0) {
      selectedIds.forEach(id => {
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'selected_ingredient_ids[]';
        input.value = id;
        orderForm.appendChild(input);
      });
    }
    
    if (removedIds.length > 0) {
      removedIds.forEach(id => {
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'removed_ingredient_ids[]';
        input.value = id;
        orderForm.appendChild(input);
      });
    }
  });
});

// Функция для открытия модального окна с изображением
function openImageModal(imageUrl) {
  const modal = document.getElementById('image_modal');
  const modalImage = document.getElementById('modal_image');
  modalImage.src = imageUrl;
  modal.showModal();
}

// Добавляем глобальный обработчик ошибок для отладки
window.addEventListener('error', function(e) {
  console.error('Global error:', e.error);
});
</script>
